{"version":3,"sources":["components/DocsPage/index.ts","components/DocsPage/DocsPage.tsx","../../src/Constants/defaults.ts","../../src/Drawer/Drawer.tsx","../../src/assets/icons/ArrowIcon.tsx","../../src/ModeButton/ModeButton.tsx","../../src/Content/Content.tsx","../../src/DrawerWrapper/DrawerWrapper.tsx","components/Examples/SampleDrawerWrapper.tsx","components/assets/icons/react-logo.svg","components/Examples/index.ts","components/Examples/Examples.tsx","components/layout/SideNav.tsx","components/layout/FooterBar.tsx","App.tsx","index.tsx"],"names":["DocsPage","style","height","display","justifyContent","alignItems","WarningOutlined","fontSize","marginLeft","marginBottom","color","getDefaultDrawerHeight","direction","getDefaultDrawerWidth","Drawer","props","open","speed","width","children","drawerClassName","directionMode","className","clsx","transition","ArrowIcon","rotate","xmlns","fill","viewBox","stroke","transform","strokeLinecap","strokeLinejoin","strokeWidth","d","ModeButton","size","onModeChange","onClick","Content","buttonSize","standardClassName","DrawerWrapper","buttonModeSize","child","_g","SampleDrawerWrapper","Examples","useState","directionAndSizeOpen","setDirectionAndSizeOpen","setDirection","btnSize","setBtnSize","useEffect","speedOpen","setSpeedOpen","setSpeed","sizeOpen","setSizeOpen","setHeight","heightType","setHeightType","setWidth","widthType","setWidthType","margin","Group","value","onChange","e","target","type","background","nextMode","newSpeed","max","step","flexDirection","placeholder","parseInt","Option","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","createElement","ref","cx","cy","r","ForwardRef","forwardRef","Sider","Layout","SideNav","collapsed","onCollapse","location","useLocation","theme","overflow","position","top","left","collapsible","mode","defaultSelectedKeys","selectedKeys","pathname","Item","icon","FileMarkdownOutlined","to","CodeOutlined","Footer","FooterBar","textAlign","App","sideMenuCollapsed","setSideMenuCollapsed","minHeight","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7a28f8d.chunk.js","sourcesContent":["import DocsPage from './DocsPage';\r\n\r\nexport default DocsPage;\r\n","import React from 'react';\r\nimport { WarningOutlined } from '@ant-design/icons';\r\n\r\nconst DocsPage = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n            }}\r\n        >\r\n            <h1>Under Construction</h1>\r\n            <WarningOutlined\r\n                style={{\r\n                    fontSize: '16px',\r\n                    marginLeft: '5px',\r\n                    marginBottom: '5px',\r\n                    color: 'orange'\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DocsPage;\r\n","export const DEFAULT_DRAWER_BTN_SIZE = 'short';\r\nexport const DEFAULT_DRAWER_STATE = false; // open (true) - not open (false)\r\nexport const DEFAULT_DRAWER_DIRECTION = 'left';\r\nexport const DEFAULT_DRAWER_TRANSITION_SPEED = 0.3;\r\n\r\ntype directionType = 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport const getDefaultDrawerHeight = (direction: directionType) => {\r\n    if (direction === 'left' || direction === 'right') {\r\n        return '100%';\r\n    } else {\r\n        return '20%';\r\n    }\r\n};\r\n\r\nexport const getDefaultDrawerWidth = (direction: directionType) => {\r\n    if (direction === 'left' || direction === 'right') {\r\n        return '30%';\r\n    } else {\r\n        return '100%';\r\n    }\r\n};\r\n","import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    DEFAULT_DRAWER_STATE,\r\n    DEFAULT_DRAWER_DIRECTION,\r\n    DEFAULT_DRAWER_TRANSITION_SPEED,\r\n    getDefaultDrawerHeight,\r\n    getDefaultDrawerWidth\r\n} from '../Constants';\r\nimport './Drawer.css';\r\n\r\nexport interface IDrawerProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    open?: boolean;\r\n    direction?: 'top' | 'bottom' | 'left' | 'right';\r\n    speed?: number;\r\n    height?: string;\r\n    width?: string;\r\n    children?: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\nconst Drawer = (props: IDrawerProps) => {\r\n    const {\r\n        className,\r\n        style,\r\n        open = DEFAULT_DRAWER_STATE,\r\n        direction = DEFAULT_DRAWER_DIRECTION,\r\n        speed = DEFAULT_DRAWER_TRANSITION_SPEED,\r\n        height = getDefaultDrawerHeight(direction),\r\n        width = getDefaultDrawerWidth(direction),\r\n        children\r\n    } = props;\r\n\r\n    const drawerClassName = open ? 'drawer open' : 'drawer close';\r\n    const directionMode =\r\n        direction === 'left' || direction === 'right' ? 'width' : 'height';\r\n\r\n    return (\r\n        <div\r\n            className={clsx(drawerClassName, className)}\r\n            style={{\r\n                ...style,\r\n                height,\r\n                width,\r\n                transition: `${directionMode} ${speed}s ease-out, padding ${\r\n                    speed / 4\r\n                }s ease-out, box-shadow ${speed}s ease-out`\r\n            }}\r\n        >\r\n            <div className='drawer-content'>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDrawer.displayName = 'Drawer';\r\n\r\nexport default Drawer;\r\n","import * as React from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface IArrowIconProps {\r\n    className?: string;\r\n    height?: string;\r\n    width?: string;\r\n    rotate?: number;\r\n}\r\n\r\nconst ArrowIcon = (props: IArrowIconProps) => {\r\n    const { className, height, width, rotate } = props;\r\n\r\n    return (\r\n        <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            className={clsx(className, 'h-6 w-6')}\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n            height={height}\r\n            width={width}\r\n            style={{ transform: `rotate(${rotate}deg)` }}\r\n        >\r\n            <path\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                strokeWidth={2}\r\n                d='M19 9l-7 7-7-7'\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default ArrowIcon;\r\n","import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport { DEFAULT_DRAWER_BTN_SIZE } from '../Constants';\r\nimport Arrow from '../assets/icons/ArrowIcon';\r\nimport './ModeButton.css';\r\n\r\ninterface IModeButtonProps {\r\n    className?: string;\r\n    size?: 'short' | 'long';\r\n    open: boolean;\r\n    onModeChange: (nextMode: boolean) => void;\r\n}\r\n\r\nconst ModeButton = (props: IModeButtonProps) => {\r\n    const {\r\n        className,\r\n        size = DEFAULT_DRAWER_BTN_SIZE,\r\n        open,\r\n        onModeChange\r\n    } = props;\r\n\r\n    return (\r\n        <button\r\n            className={clsx(className, 'react-drawer-wrapper-mode-btn', size)}\r\n            onClick={() => onModeChange(!open)}\r\n        >\r\n            <Arrow height='20px' width='20px' />\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ModeButton;\r\n","import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    DEFAULT_DRAWER_BTN_SIZE,\r\n    DEFAULT_DRAWER_STATE,\r\n    DEFAULT_DRAWER_DIRECTION,\r\n    DEFAULT_DRAWER_TRANSITION_SPEED,\r\n    getDefaultDrawerHeight,\r\n    getDefaultDrawerWidth\r\n} from '../Constants';\r\nimport ModeButton from '../ModeButton';\r\nimport './content.css';\r\n\r\nexport interface IContentProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    buttonSize?: 'short' | 'long';\r\n    open?: boolean;\r\n    onModeChange?: (nextMode: boolean) => any;\r\n    direction?: 'top' | 'bottom' | 'left' | 'right';\r\n    speed?: number;\r\n    height?: string;\r\n    width?: string;\r\n    children?: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\nconst Content = (props: IContentProps) => {\r\n    const {\r\n        className,\r\n        style,\r\n        buttonSize = DEFAULT_DRAWER_BTN_SIZE,\r\n        open = DEFAULT_DRAWER_STATE,\r\n        onModeChange = () => {},\r\n        direction = DEFAULT_DRAWER_DIRECTION,\r\n        speed = DEFAULT_DRAWER_TRANSITION_SPEED,\r\n        height = getDefaultDrawerHeight(direction),\r\n        width = getDefaultDrawerWidth(direction),\r\n        children\r\n    } = props;\r\n\r\n    const standardClassName = `drawer-wrapper-content ${\r\n        open ? 'open' : 'close'\r\n    }`;\r\n    const directionMode =\r\n        direction === 'left' || direction === 'right' ? 'width' : 'height';\r\n\r\n    return (\r\n        <div\r\n            className={clsx(standardClassName, className)}\r\n            style={{\r\n                ...style,\r\n                [directionMode]: `calc(100% - ${\r\n                    directionMode === 'width' ? width : height\r\n                })`,\r\n                transition: `${directionMode} ${speed}s ease-out`\r\n            }}\r\n        >\r\n            <ModeButton\r\n                size={buttonSize}\r\n                open={open}\r\n                onModeChange={onModeChange}\r\n            />\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nContent.displayName = 'Content';\r\n\r\nexport default Content;\r\n","import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport Drawer from '../Drawer';\r\nimport Content from '../Content';\r\nimport {\r\n    DEFAULT_DRAWER_STATE,\r\n    DEFAULT_DRAWER_DIRECTION,\r\n    DEFAULT_DRAWER_TRANSITION_SPEED,\r\n    getDefaultDrawerHeight,\r\n    getDefaultDrawerWidth\r\n} from '../Constants';\r\nimport './drawerWrapper.css';\r\n\r\ninterface IDrawerWrapperProps {\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n    height?: string;\r\n    width?: string;\r\n    buttonSize?: 'short' | 'long';\r\n    open: boolean;\r\n    onModeChange: (nextMode: boolean) => any;\r\n    direction?: 'top' | 'bottom' | 'left' | 'right';\r\n    speed?: number;\r\n    children?: React.ReactNode | React.ReactNode[];\r\n}\r\n\r\nconst DrawerWrapper = (props: IDrawerWrapperProps) => {\r\n    const {\r\n        className,\r\n        style,\r\n        buttonSize,\r\n        open = DEFAULT_DRAWER_STATE,\r\n        onModeChange,\r\n        direction = DEFAULT_DRAWER_DIRECTION,\r\n        height = getDefaultDrawerHeight(direction),\r\n        width = getDefaultDrawerWidth(direction),\r\n        speed = DEFAULT_DRAWER_TRANSITION_SPEED,\r\n        children\r\n    } = props;\r\n\r\n    const buttonModeSize =\r\n        direction === 'left' || direction === 'right' ? 'short' : 'long';\r\n\r\n    return (\r\n        <div\r\n            className={clsx(\r\n                'react-drawer-wrapper',\r\n                `drawer-${direction}-mode`,\r\n                className\r\n            )}\r\n            style={style}\r\n        >\r\n            {React.Children.map(children, (child: any) => {\r\n                switch (child.type.displayName) {\r\n                    case 'Drawer':\r\n                        return React.cloneElement(child, {\r\n                            open,\r\n                            direction,\r\n                            height,\r\n                            width,\r\n                            speed\r\n                        });\r\n\r\n                    case 'Content':\r\n                        return React.cloneElement(child, {\r\n                            buttonSize: buttonSize || buttonModeSize,\r\n                            open,\r\n                            onModeChange,\r\n                            direction,\r\n                            height,\r\n                            width,\r\n                            speed\r\n                        });\r\n\r\n                    default:\r\n                        return child;\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nDrawerWrapper.Drawer = Drawer;\r\nDrawerWrapper.Content = Content;\r\n\r\nexport default DrawerWrapper;\r\n","import React from 'react';\r\nimport { DrawerWrapper } from 'react-drawer-wrapper';\r\n\r\ninterface ISampleDrawerWrapperProps {\r\n    direction?: 'left' | 'right' | 'top' | 'bottom';\r\n    buttonSize?: 'short' | 'long';\r\n    speed?: number;\r\n    height?: string | undefined;\r\n    width?: string | undefined;\r\n    open: boolean;\r\n    onModeChange: (nextMode: boolean) => void;\r\n}\r\n\r\nconst SampleDrawerWrapper = ({\r\n    direction,\r\n    buttonSize,\r\n    speed,\r\n    height,\r\n    width,\r\n    open,\r\n    onModeChange\r\n}: ISampleDrawerWrapperProps) => {\r\n    return (\r\n        <DrawerWrapper\r\n            className='sample-drawer-wrapper'\r\n            style={{ height: '500px' }}\r\n            direction={direction}\r\n            buttonSize={buttonSize}\r\n            speed={speed}\r\n            height={height}\r\n            width={width}\r\n            open={open}\r\n            onModeChange={onModeChange}\r\n        >\r\n            <DrawerWrapper.Drawer\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <p>sample drawer</p>\r\n            </DrawerWrapper.Drawer>\r\n            <DrawerWrapper.Content\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                }}\r\n            >\r\n                <p>sample content</p>\r\n            </DrawerWrapper.Content>\r\n        </DrawerWrapper>\r\n    );\r\n};\r\n\r\nexport default SampleDrawerWrapper;\r\n","var _g;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgReactLogo = function SvgReactLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgReactLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/react-logo.93a44c99.svg\";\nexport { ForwardRef as ReactComponent };","import Examples from './Examples';\r\n\r\nexport default Examples;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SampleDrawerWrapper from './SampleDrawerWrapper';\r\nimport { Radio, Slider, Divider, Input, Select } from 'antd';\r\nimport type { RadioChangeEvent } from 'antd';\r\nimport './examples.css';\r\n\r\ntype directionType = 'left' | 'right' | 'top' | 'bottom';\r\ntype btnSizeType = 'long' | 'short';\r\n\r\nconst Examples = () => {\r\n    // direction & btn size example\r\n    const [directionAndSizeOpen, setDirectionAndSizeOpen] = useState(false);\r\n    const [direction, setDirection] = useState<directionType>('left');\r\n    const [btnSize, setBtnSize] = useState<btnSizeType>('short');\r\n\r\n    useEffect(() => {\r\n        if (direction === 'left' || direction === 'right') {\r\n            setBtnSize('short');\r\n        } else {\r\n            setBtnSize('long');\r\n        }\r\n    }, [direction]);\r\n\r\n    const onDirectionChange = (e: RadioChangeEvent) => {\r\n        setDirection(e.target.value);\r\n    };\r\n\r\n    const onBtnSizeChange = (e: RadioChangeEvent) => {\r\n        setBtnSize(e.target.value);\r\n    };\r\n\r\n    const directionHandleMode = (nextMode: boolean) => {\r\n        setDirectionAndSizeOpen(nextMode);\r\n    };\r\n\r\n    // speed example\r\n    const [speedOpen, setSpeedOpen] = useState(false);\r\n    const [speed, setSpeed] = useState(0.3);\r\n\r\n    const onSpeedChange = (newSpeed: number) => {\r\n        setSpeed(newSpeed);\r\n    };\r\n\r\n    const onSpeedHandleMode = (nextMode: boolean) => {\r\n        setSpeedOpen(nextMode);\r\n    };\r\n\r\n    // width-height example\r\n    const [sizeOpen, setSizeOpen] = useState(false);\r\n\r\n    const [height, setHeight] = useState<number | undefined>(100);\r\n    const [heightType, setHeightType] = useState('%');\r\n    const [width, setWidth] = useState<number | undefined>(30);\r\n    const [widthType, setWidthType] = useState('%');\r\n\r\n    const onHeightChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setHeight(parseInt(e.target.value));\r\n    };\r\n\r\n    const onHeightTypeChange = (value: string) => {\r\n        setHeightType(value);\r\n    };\r\n\r\n    const onWidthChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setWidth(parseInt(e.target.value));\r\n    };\r\n\r\n    const onWidthTypeChange = (value: string) => {\r\n        setWidthType(value);\r\n    };\r\n\r\n    const onSizeHandleMode = (nextMode: boolean) => {\r\n        setSizeOpen(nextMode);\r\n    };\r\n\r\n    return (\r\n        <div className='examples-page' style={{ margin: '1% 5%' }}>\r\n            <div className='example-section'>\r\n                <h1>Change direction & Button Size</h1>\r\n                <h4>\r\n                    When direction is: left / right, the default button size is\r\n                    \"short\"\r\n                </h4>\r\n                <h4>\r\n                    When direction is: top / bottom, the default button size is\r\n                    \"long\"\r\n                </h4>\r\n\r\n                <Radio.Group value={direction} onChange={onDirectionChange}>\r\n                    <Radio value='top'>Top</Radio>\r\n                    <Radio value='bottom'>Bottom</Radio>\r\n                    <Radio value='left'>Left</Radio>\r\n                    <Radio value='right'>Right</Radio>\r\n                </Radio.Group>\r\n\r\n                <Divider\r\n                    type='vertical'\r\n                    style={{\r\n                        margin: '0 0.5%',\r\n                        background: '#333'\r\n                    }}\r\n                />\r\n\r\n                <Radio.Group value={btnSize} onChange={onBtnSizeChange}>\r\n                    <Radio value='long'>Long</Radio>\r\n                    <Radio value='short'>Short</Radio>\r\n                </Radio.Group>\r\n\r\n                <SampleDrawerWrapper\r\n                    direction={direction}\r\n                    buttonSize={btnSize}\r\n                    open={directionAndSizeOpen}\r\n                    onModeChange={directionHandleMode}\r\n                />\r\n            </div>\r\n            <div className='example-section'>\r\n                <h1>Change Speed</h1>\r\n\r\n                <Slider\r\n                    value={speed}\r\n                    onChange={onSpeedChange}\r\n                    max={5}\r\n                    step={0.1}\r\n                />\r\n\r\n                <SampleDrawerWrapper\r\n                    speed={speed}\r\n                    open={speedOpen}\r\n                    onModeChange={onSpeedHandleMode}\r\n                />\r\n            </div>\r\n\r\n            <div className='example-section'>\r\n                <h1>Change Height & Width</h1>\r\n\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                    <span>Height: </span>\r\n                    <Input\r\n                        style={{ width: '15%' }}\r\n                        placeholder='Input a number'\r\n                        type='number'\r\n                        value={height}\r\n                        onChange={onHeightChange}\r\n                    />\r\n                    <Select value={heightType} onChange={onHeightTypeChange}>\r\n                        <Select.Option value='px'>px</Select.Option>\r\n                        <Select.Option value='%'>%</Select.Option>\r\n                        <Select.Option value='vh'>vh</Select.Option>\r\n                    </Select>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row'\r\n                    }}\r\n                >\r\n                    <span>Width: </span>\r\n                    <Input\r\n                        style={{ width: '15%' }}\r\n                        placeholder='Input a number'\r\n                        type='number'\r\n                        value={width}\r\n                        onChange={onWidthChange}\r\n                    />\r\n                    <Select value={widthType} onChange={onWidthTypeChange}>\r\n                        <Select.Option value='px'>px</Select.Option>\r\n                        <Select.Option value='%'>%</Select.Option>\r\n                        <Select.Option value='vh'>vh</Select.Option>\r\n                    </Select>\r\n                </div>\r\n\r\n                <SampleDrawerWrapper\r\n                    height={height + heightType}\r\n                    width={width + widthType}\r\n                    open={sizeOpen}\r\n                    onModeChange={onSizeHandleMode}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Examples;\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { FileMarkdownOutlined, CodeOutlined } from '@ant-design/icons';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport type { CollapseType } from 'antd/lib/layout/Sider';\r\nimport { ReactComponent as ReactLogo } from '../assets/icons/react-logo.svg';\r\n\r\nconst { Sider } = Layout;\r\n\r\ninterface ISideNavProps {\r\n    collapsed: boolean;\r\n    onCollapse?: (collapsed: boolean, type: CollapseType) => void;\r\n}\r\n\r\nconst SideNav = ({ collapsed, onCollapse }: ISideNavProps) => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <Sider\r\n            theme='light'\r\n            style={{\r\n                overflow: 'auto',\r\n                height: '100vh',\r\n                position: 'sticky',\r\n                top: 0,\r\n                left: 0\r\n            }}\r\n            collapsible\r\n            collapsed={collapsed}\r\n            onCollapse={onCollapse}\r\n        >\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <ReactLogo height='50px' width='100%' />\r\n            </div>\r\n            <Menu\r\n                theme='light'\r\n                mode='inline'\r\n                defaultSelectedKeys={['/']}\r\n                selectedKeys={[location.pathname]}\r\n            >\r\n                <Menu.Item key='/' icon={<FileMarkdownOutlined />}>\r\n                    <Link to='/' />\r\n                    Docs\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='/examples' icon={<CodeOutlined />}>\r\n                    <Link to='/examples' />\r\n                    Examples\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default SideNav;\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Footer } = Layout;\r\n\r\nconst FooterBar = () => {\r\n    return (\r\n        <Footer style={{ textAlign: 'center' }}>\r\n            <h1>created by Yitzhakpro</h1>\r\n        </Footer>\r\n    );\r\n};\r\n\r\nexport default FooterBar;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Layout } from 'antd';\r\nimport { SideNav, DocsPage, Examples, FooterBar } from './components';\r\nimport 'react-drawer-wrapper/dist/index.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst App = () => {\r\n    const [sideMenuCollapsed, setSideMenuCollapsed] = useState(false);\r\n\r\n    const handleSideMenuOnCollapse = (collapsed: boolean) => {\r\n        setSideMenuCollapsed(collapsed);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <SideNav\r\n                    collapsed={sideMenuCollapsed}\r\n                    onCollapse={handleSideMenuOnCollapse}\r\n                />\r\n                <Layout>\r\n                    <Content>\r\n                        <Switch>\r\n                            <Route exact path='/' component={DocsPage} />\r\n                            <Route path='/examples' component={Examples} />\r\n                        </Switch>\r\n                    </Content>\r\n                    <FooterBar />\r\n                </Layout>\r\n            </Layout>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}